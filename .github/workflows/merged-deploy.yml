name: Build and Deploy Helm Chart

on:
  push:
    branches:
      - main
    paths:
      - 'helm-chart/**'
      - '.github/workflows/**'
      - '**Dockerfile'
      - '**/*.py'
  workflow_dispatch:

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    outputs:
      image-tag: \${{ steps.set-image-tag.outputs.image-tag }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set image tag
      id: set-image-tag
      run: echo "image-tag=bashar:latest" >> \$GITHUB_OUTPUT

    - name: Docker Hub Login
      uses: docker/login-action@v2.2.0
      with:
       username: ${{ vars.USER_NAME }}
       password: ${{ secrets.USER_PASS }}

    - name: Build and push Docker image
      id: build-push
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ vars.USER_NAME }}/bashar:${{ github.sha }}

    - name: verify image exists
      run: |
        docker pull basharsamahy/bashar:latest || \ 
        (echo "Error: Image not found" && exit 1)

  deploy-helm-chart:
    needs: build-and-push-image
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Helm
      uses: azure/setup-helm@v3

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Configure kubectl
      run: |
         echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig
         chmod 600 kubeconfig
         export KUBECONFIG=$(pwd)/kubeconfig
         kubectl cluster-info
         kubectl get nodes

    - name: Deploy Helm chart
      run: |
        helm uninstall bashar-release --kubeconfig kubeconfig || true
        helm upgrade --install bashar-release helm-chart \
        --set image.tag=latest \
        --kubeconfig kubeconfig \
        --atomic --timeout 300s
    
    - name: Debug Deployment Issues
      run: |
        echo "### Pod Details ###"
        kubectl get pods -l place=iti,name=bashar --kubeconfig kubeconfig -o wide
        
        echo "## Pod Events ##"
        kubectl describe pods -l place=iti,name=bashar --kubeconfig kubeconfig
        
        echo "## Deployment Events ##"
        kubectl describe deployment bashar-release-deployment --kubeconfig kubeconfig

    - name: Verify Deployment
      run: |
       echo "### Checking Rollout Status ###"
       kubectl rollout status deployment/bashar-release-deployment --kubeconfig kubeconfig || true
    
       echo "### Checking Pods ###"
       kubectl get pods -l place=iti,name=bashar -o wide --kubeconfig kubeconfig --namespace default 
      
       echo "### pods logs ###"
        kubectl logs -l place=iti,name=bashar --kubeconfig kubeconfig || echo "No logs available yet"

       echo "### Checking Services ###"
       kubectl get svc -l place=iti,name=bashar --namespace default --kubeconfig kubeconfig

       echo "### Helm Resources ###"
       helm get manifest bashar-release --kubeconfig kubeconfig
    
       echo "### Helm Status ###"
       helm status bashar-release --kubeconfig kubeconfig